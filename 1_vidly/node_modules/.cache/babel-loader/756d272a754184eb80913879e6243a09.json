{"ast":null,"code":"var _jsxFileName = \"/Users/paloma/Desktop/1_vidly/src/components/movieForm.js\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getGenres } from '../services/fakeGenreService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        genre_id: '',\n        stock: '',\n        rate: ''\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      _id: Joi.string(),\n      title: Joi.string().required().label('Title'),\n      genre_id: Joi.string().required().label('Genre'),\n      stock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n      rate: Joi.number().required().min(0).max(10).label('Rate')\n    };\n\n    this.doSubmit = () => {//Call the server\n    };\n  }\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({\n      genres\n    });\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n    this.setState({\n      data: this.mapToViewModel(movie)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MovieForm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput('title', 'Title'), this.renderSelect('genre_id', 'Genre'), this.renderInput('stock', 'Number in Stock'), this.renderInput('rate', 'Rate'), this.renderButton('Save')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/paloma/Desktop/1_vidly/src/components/movieForm.js"],"names":["React","Joi","Form","getGenres","MovieForm","state","data","title","genre_id","stock","rate","genres","errors","schema","_id","string","required","label","number","min","max","doSubmit","componentDidMount","setState","movieId","props","match","params","id","movie","getMovie","history","replace","mapToViewModel","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;;AAEA,MAAMC,SAAN,SAAwBF,IAAxB,CAA6B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE,EAAtB;AAA0BC,QAAAA,KAAK,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADiB;AAAA,SAOzBC,MAPyB,GAOhB;AACLC,MAAAA,GAAG,EAAEb,GAAG,CAACc,MAAJ,EADA;AAELR,MAAAA,KAAK,EAAEN,GAAG,CAACc,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CAFF;AAGLT,MAAAA,QAAQ,EAAEP,GAAG,CAACc,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CAHL;AAILR,MAAAA,KAAK,EAAER,GAAG,CAACiB,MAAJ,GAAaF,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,GAAnC,EAAwCH,KAAxC,CAA8C,iBAA9C,CAJF;AAKLP,MAAAA,IAAI,EAAET,GAAG,CAACiB,MAAJ,GAAaF,QAAb,GAAwBG,GAAxB,CAA4B,CAA5B,EAA+BC,GAA/B,CAAmC,EAAnC,EAAuCH,KAAvC,CAA6C,MAA7C;AALD,KAPgB;;AAAA,SA4BzBI,QA5ByB,GA4Bd,MAAM,CACb;AACH,KA9BwB;AAAA;;AAezBC,EAAAA,iBAAiB,GAAG;AAChB,UAAMX,MAAM,GAAGR,SAAS,EAAxB;AACA,SAAKoB,QAAL,CAAc;AAACZ,MAAAA;AAAD,KAAd;AAEA,UAAMa,OAAO,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxC;AACA,QAAIJ,OAAO,KAAK,KAAhB,EAAuB;AAEvB,UAAMK,KAAK,GAAGC,QAAQ,CAACN,OAAD,CAAtB;AACA,QAAI,CAACK,KAAL,EAAY,OAAO,KAAKJ,KAAL,CAAWM,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B,CAAP;AAEZ,SAAKT,QAAL,CAAc;AAACjB,MAAAA,IAAI,EAAE,KAAK2B,cAAL,CAAoBJ,KAApB;AAAP,KAAd;AACH;;AAMDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACK,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CADL,EAEK,KAAKC,YAAL,CAAkB,UAAlB,EAA8B,OAA9B,CAFL,EAGK,KAAKD,WAAL,CAAiB,OAAjB,EAA0B,iBAA1B,CAHL,EAIK,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAJL,EAKK,KAAKE,YAAL,CAAkB,MAAlB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA7CwB;;AAgD7B,eAAelC,SAAf","sourcesContent":["import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getGenres } from '../services/fakeGenreService';\n\nclass MovieForm extends Form {\n    state = {\n        data: {title: '', genre_id: '', stock: '', rate: ''},\n        genres: [],\n        errors: {}\n    }\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label('Title'),\n        genre_id: Joi.string().required().label('Genre'),\n        stock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n        rate: Joi.number().required().min(0).max(10).label('Rate')\n    }\n\n    componentDidMount() {\n        const genres = getGenres();\n        this.setState({genres});\n\n        const movieId = this.props.match.params.id;\n        if (movieId === \"new\") return;\n\n        const movie = getMovie(movieId);\n        if (!movie) return this.props.history.replace(\"/not-found\");\n\n        this.setState({data: this.mapToViewModel(movie)});\n    }\n\n    doSubmit = () => {\n        //Call the server\n    }\n\n    render() { \n        return ( \n            <div>\n                <h1>MovieForm</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput('title', 'Title')}\n                    {this.renderSelect('genre_id', 'Genre')}\n                    {this.renderInput('stock', 'Number in Stock')}\n                    {this.renderInput('rate', 'Rate')}\n                    {this.renderButton('Save')}\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default MovieForm;"]},"metadata":{},"sourceType":"module"}