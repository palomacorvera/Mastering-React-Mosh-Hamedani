{"ast":null,"code":"var _jsxFileName = \"/Users/paloma/Desktop/1_vidly/src/components/movies.js\";\nimport React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport Pagination from './common/pagination';\nimport { paginate } from '../utils/paginate';\nimport ListGroup from './common/listGroup';\nimport { getGenres } from '../services/fakeGenreService';\nimport MoviesTable from './moviesTable';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: 'title',\n        order: 'asc'\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPageData = () => {\n      const {\n        pageSize,\n        currentPage,\n        sortColumn,\n        selectedGenre,\n        movies: allMovies\n      } = this.state;\n      const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: '',\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPageData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchQuery,\n          onChange: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort,\n          sortColumn: sortColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/paloma/Desktop/1_vidly/src/components/movies.js"],"names":["React","Component","getMovies","Pagination","paginate","ListGroup","getGenres","MoviesTable","_","Link","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handlePageChange","page","handleGenreSelect","genre","selectedGenre","searchQuery","handleSort","handleSearch","query","getPageData","allMovies","filtered","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {getMovies} from '../services/fakeMovieService';\nimport Pagination from './common/pagination';\nimport {paginate} from '../utils/paginate';\nimport ListGroup from './common/listGroup';\nimport { getGenres } from '../services/fakeGenreService';\nimport MoviesTable from './moviesTable';\nimport _ from 'lodash';\nimport { Link } from 'react-router-dom';\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        pageSize: 4,\n        currentPage: 1,\n        genres: [],\n        sortColumn: {path: 'title', order: 'asc'}\n    }\n\n    componentDidMount() {\n        const genres = [{_id: '', name: 'All Genres'}, ...getGenres()]\n\n        this.setState({movies: getMovies(), genres});\n    }\n\n    handleDelete = (movie) => {\n        const movies = this.state.movies.filter(m => m._id !== movie._id);\n        this.setState({movies});\n    }\n\n    handlePageChange = page => {\n        this.setState({currentPage: page});\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({selectedGenre: genre, searchQuery: \"\", currentPage: 1});\n    }\n\n    handleSort = sortColumn => {\n        this.setState({sortColumn});\n    }\n\n    handleSearch = query => {\n        this.setState({searchQuery: query, selectedGenre: null, currentPage: 1});\n    }\n\n    handleSort = sortColumn => {\n        this.setState({sortColumn});\n    }\n\n    getPageData = () => {\n        const {pageSize, currentPage, sortColumn, selectedGenre, movies: allMovies} = this.state;\n\n        const filtered = selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id) \n        : allMovies;\n\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n\n        const movies = paginate(sorted, currentPage, pageSize);\n\n        return {totalCount: filtered.length, data: movies};\n    }\n\n    render() { \n        const {length: count} = this.state.movies;\n        const {pageSize, currentPage, sortColumn} = this.state;\n\n        if (count === 0) return <p>There are no movies in the database</p>;\n\n        const {totalCount, data: movies} = this.getPageData();\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup \n                        items={this.state.genres} \n                        selectedItem={this.state.selectedGenre}\n                        onItemSelect={this.handleGenreSelect}\n                    />\n                </div>\n                <div className=\"col\">\n                    <Link\n                        to=\"/movies/new\"\n                        className=\"btn btn-primary\"\n                        style={{marginBottom: 20}}\n                    >New Movie</Link>\n                    <p>Showing {totalCount} movies in the database</p>\n                    <SearchBox value={searchQuery} onChange={this.handleSearch} />\n                    <MoviesTable \n                        movies={movies} \n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}    \n                        sortColumn={sortColumn}\n                    />\n                    <Pagination \n                        itemsCount={totalCount} \n                        pageSize={pageSize} \n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}/>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Movies;"]},"metadata":{},"sourceType":"module"}