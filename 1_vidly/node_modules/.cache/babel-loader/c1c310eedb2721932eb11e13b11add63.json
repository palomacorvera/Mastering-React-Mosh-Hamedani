{"ast":null,"code":"var _jsxFileName = \"/Users/paloma/Desktop/vidly/src/components/movies.js\";\nimport React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport Pagination from './pagination';\nimport { paginate } from '../utils/paginate';\nimport ListGroup from './listGroup';\nimport { getGenres } from '../services/fakeGenreService';\nimport MoviesTable from './moviesTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: []\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in the database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/paloma/Desktop/vidly/src/components/movies.js"],"names":["React","Component","getMovies","Pagination","paginate","ListGroup","getGenres","MoviesTable","Movies","state","movies","pageSize","currentPage","genres","handleDelete","movie","filter","m","_id","setState","handlePageChange","page","handleGenreSelect","genre","selectedGenre","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {getMovies} from '../services/fakeMovieService';\nimport Pagination from './pagination';\nimport {paginate} from '../utils/paginate';\nimport ListGroup from './listGroup';\nimport { getGenres } from '../services/fakeGenreService';\nimport MoviesTable from './moviesTable';\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        pageSize: 4,\n        currentPage: 1,\n        genres: []\n    }\n\n    componentDidMount() {\n        const genres = [{name: 'All Genres'}, ...getGenres()]\n\n        this.setState({movies: getMovies(), genres});\n    }\n\n    handleDelete = (movie) => {\n        const movies = this.state.movies.filter(m => m._id !== movie._id);\n        this.setState({movies});\n    }\n\n    handlePageChange = page => {\n        this.setState({currentPage: page});\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({selectedGenre: genre, currentPage: 1});\n    }\n\n    render() { \n        const {length: count} = this.state.movies;\n        const {pageSize, currentPage, selectedGenre, movies: allMovies} = this.state;\n\n        if (count === 0) return <p>There are no movies in the database</p>;\n\n        const filtered = selectedGenre && selectedGenre._id\n            ? allMovies.filter(m => m.genre._id === selectedGenre._id) \n            : allMovies;\n\n        const movies = paginate(filtered, currentPage, pageSize);\n\n        return ( \n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup \n                        items={this.state.genres} \n                        selectedItem={this.state.selectedGenre}\n                        onItemSelect={this.handleGenreSelect}\n                    />\n                </div>\n                <div className=\"col\">\n                    <p>Showing {filtered.length} movies in the database</p>\n                    <MoviesTable \n                        movies={movies} \n                        onDelete={this.handleDelete}/>\n                    <Pagination \n                        itemsCount={filtered.length} \n                        pageSize={pageSize} \n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}/>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Movies;"]},"metadata":{},"sourceType":"module"}