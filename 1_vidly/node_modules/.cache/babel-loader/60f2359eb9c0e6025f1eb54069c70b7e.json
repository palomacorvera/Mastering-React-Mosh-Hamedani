{"ast":null,"code":"var _jsxFileName = \"/Users/paloma/Desktop/1_vidly/src/components/movieForm.js\";\nimport React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getGenres } from '../services/fakeGenreService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        title: '',\n        genre_id: '',\n        stock: '',\n        rate: ''\n      },\n      genres: [],\n      errors: {}\n    };\n    this.schema = {\n      title: Joi.string().required().label('Title'),\n      genre_id: Joi.required().label('Genre'),\n      stock: Joi.number().min(0).max(100).label('Number in Stock'),\n      rate: Joi.number().min(0).max(10).label('Rate')\n    };\n\n    this.doSubmit = () => {//Call the server\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: '',\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      genres\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MovieForm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput('title', 'Title'), this.renderSelect('genre_id', 'Genre'), this.renderInput('stock', 'Number in Stock'), this.renderInput('rate', 'Rate'), this.renderButton('Save')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MovieForm;","map":{"version":3,"sources":["/Users/paloma/Desktop/1_vidly/src/components/movieForm.js"],"names":["React","Joi","Form","getGenres","MovieForm","state","data","title","genre_id","stock","rate","genres","errors","schema","string","required","label","number","min","max","doSubmit","componentDidMount","_id","name","setState","render","handleSubmit","renderInput","renderSelect","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,QAA0B,8BAA1B;;;AAEA,MAAMC,SAAN,SAAwBF,IAAxB,CAA6B;AAAA;AAAA;AAAA,SACzBG,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE,EAAtB;AAA0BC,QAAAA,KAAK,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OADF;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADiB;AAAA,SAOzBC,MAPyB,GAOhB;AACLN,MAAAA,KAAK,EAAEN,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,OAA9B,CADF;AAELR,MAAAA,QAAQ,EAAEP,GAAG,CAACc,QAAJ,GAAeC,KAAf,CAAqB,OAArB,CAFL;AAGLP,MAAAA,KAAK,EAAER,GAAG,CAACgB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,GAAxB,EAA6BH,KAA7B,CAAmC,iBAAnC,CAHF;AAILN,MAAAA,IAAI,EAAET,GAAG,CAACgB,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,GAApB,CAAwB,EAAxB,EAA4BH,KAA5B,CAAkC,MAAlC;AAJD,KAPgB;;AAAA,SAoBzBI,QApByB,GAoBd,MAAM,CACb;AACH,KAtBwB;AAAA;;AAczBC,EAAAA,iBAAiB,GAAG;AAChB,UAAMV,MAAM,GAAG,CAAC;AAACW,MAAAA,GAAG,EAAE,EAAN;AAAUC,MAAAA,IAAI,EAAE;AAAhB,KAAD,EAAgC,GAAGpB,SAAS,EAA5C,CAAf;AAEA,SAAKqB,QAAL,CAAc;AAACb,MAAAA;AAAD,KAAd;AACH;;AAMDc,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACK,KAAKC,WAAL,CAAiB,OAAjB,EAA0B,OAA1B,CADL,EAEK,KAAKC,YAAL,CAAkB,UAAlB,EAA8B,OAA9B,CAFL,EAGK,KAAKD,WAAL,CAAiB,OAAjB,EAA0B,iBAA1B,CAHL,EAIK,KAAKA,WAAL,CAAiB,MAAjB,EAAyB,MAAzB,CAJL,EAKK,KAAKE,YAAL,CAAkB,MAAlB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AArCwB;;AAwC7B,eAAezB,SAAf","sourcesContent":["import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getGenres } from '../services/fakeGenreService';\n\nclass MovieForm extends Form {\n    state = {\n        data: {title: '', genre_id: '', stock: '', rate: ''},\n        genres: [],\n        errors: {}\n    }\n\n    schema = {\n        title: Joi.string().required().label('Title'),\n        genre_id: Joi.required().label('Genre'),\n        stock: Joi.number().min(0).max(100).label('Number in Stock'),\n        rate: Joi.number().min(0).max(10).label('Rate')\n    }\n\n    componentDidMount() {\n        const genres = [{_id: '', name: 'All Genres'}, ...getGenres()]\n\n        this.setState({genres});\n    }\n\n    doSubmit = () => {\n        //Call the server\n    }\n\n    render() { \n        return ( \n            <div>\n                <h1>MovieForm</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput('title', 'Title')}\n                    {this.renderSelect('genre_id', 'Genre')}\n                    {this.renderInput('stock', 'Number in Stock')}\n                    {this.renderInput('rate', 'Rate')}\n                    {this.renderButton('Save')}\n                </form>\n            </div>\n        );\n    }\n}\n \nexport default MovieForm;"]},"metadata":{},"sourceType":"module"}